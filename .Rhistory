stripchart(list(means_control, means_treatment), pch=1,
xlim=c(1, 2), vertical=TRUE,
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(1, 1.5), vertical=TRUE,
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(1, 3), vertical=TRUE,
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(0, 3), vertical=TRUE,
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(0, 3), vertical=TRUE,
ylim=c(0, 35),
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(0, 3), vertical=TRUE,
ylim=c(0, 10),
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(0, 3), vertical=TRUE,
ylim=c(0, 20),
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(0, 3), vertical=TRUE,
ylim=c(0, 100),
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(0, 3), vertical=TRUE,
ylim=c(0, 300),
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(0, 3), vertical=TRUE,
ylim=c(0, 30),
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(0, 3), vertical=TRUE,
ylim=c(10, 30),
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(0, 3), vertical=TRUE,
ylim=c(20, 30),
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(0, 3), vertical=TRUE,
ylim=c(21, 28),
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(0, 3), vertical=TRUE,
ylim=c(21, 26),
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(0, 3), vertical=TRUE,
ylim=c(21, 27),
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(0, 3), vertical=TRUE,
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
vertical=TRUE,
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1,
xlim=c(0, 3), vertical=TRUE,
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1, col="blue",
xlim=c(0, 3), vertical=TRUE,
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=10, col="blue",
xlim=c(0, 3), vertical=TRUE,
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1, col="blue",
xlim=c(0, 3), vertical=TRUE,
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1, col="blue", method="jitter",
xlim=c(0, 3), vertical=TRUE,
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
stripchart(list(means_control, means_treatment), pch=1, col=c("blue", "red"), method="jitter",
xlim=c(0, 3), vertical=TRUE,
group.names=c("Control", "Treatment"),
main="Sample means",
ylab="Mouse weight (grams)")
hist(means_control, xlab="Weight (grams)",
main="Distribution of control mean samples")
hist(means_treatment, xlab="Weight (grams)",
main="Distribution of control mean samples")
hist(means_control, xlab="Weight (grams)",
main="Distribution of control mean samples")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(0.5, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
segments(mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
segments(0.5, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
segments(2, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
segments(1, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(1, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(-1, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(1.8, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
segments(1.5, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(1.5, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(0.5, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(0.5, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
segments(0.5, mean(treatment_sample[, 1]), 1.5,
mean(treatment_sample[, 1]), col="blue")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(0.5, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
segments(1.5, mean(treatment_sample[, 1]), 1.5,
mean(treatment_sample[, 1]), col="blue")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(0.5, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="red")
segments(1.5, mean(treatment_sample[, 1]), 2.5,
mean(treatment_sample[, 1]), col="blue")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(0.5, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="blue")
segments(1.5, mean(treatment_sample[, 1]), 2.5,
mean(treatment_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(0.5, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="blue")
segments(1.5, mean(treatment_sample[, 1]), 3,
mean(treatment_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(0.5, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="blue")
segments(1.5, mean(treatment_sample[, 1]), 2.5,
mean(treatment_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(0.9, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="blue")
segments(1.5, mean(treatment_sample[, 1]), 2.5,
mean(treatment_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(0.6, mean(control_sample[, 1]), 1.5,
mean(control_sample[, 1]), col="blue")
segments(1.5, mean(treatment_sample[, 1]), 2.5,
mean(treatment_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(0.6, mean(control_sample[, 1]), 1.3,
mean(control_sample[, 1]), col="blue")
segments(1.5, mean(treatment_sample[, 1]), 2.5,
mean(treatment_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(0.6, mean(control_sample[, 1]), 1.4,
mean(control_sample[, 1]), col="blue")
segments(1.5, mean(treatment_sample[, 1]), 2.5,
mean(treatment_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(0.6, mean(control_sample[, 1]), 1.4,
mean(control_sample[, 1]), col="blue")
segments(1.4, mean(treatment_sample[, 1]), 2.4,
mean(treatment_sample[, 1]), col="red")
stripchart(list(control_sample[, 1], treatment_sample[, 1]),
pch=1, xlim=c(0, 3), vertical=TRUE,
group.names = c("Control", "Treatment"),
main="Weights of mice",
ylab="Mouse weight (grams)")
segments(0.6, mean(control_sample[, 1]), 1.4,
mean(control_sample[, 1]), col="blue")
segments(1.6, mean(treatment_sample[, 1]), 2.4,
mean(treatment_sample[, 1]), col="red")
conf_interval <- function(sample, alpha){
critical_value <- qt(1 - (alpha/2), 24)
standard_error <- sd(sample) / sqrt(25)
lower <- mean(sample) - critical_value * standard_error
higher <- mean(sample) + critical_value * standard_error
return(c(lower, higher))
}
conf_interval(control_sample[, 1], 0.05)
conf_interval(control_sample[, 1], 0.5)
conf_interval(control_sample[, 1], 0.0.1)
conf_interval(control_sample[, 1], 0.01)
conf_interval(treatment_sample[, 1], 0.05)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, 3, 4)
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(1, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, 3, 4)
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(1, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "blue", "black")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(1, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "blue", "red")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(1, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "green", "red")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(1, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "green", "blue")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(1, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "green", "blue")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(10, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "green", "blue")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(10, 10), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "green", "blue")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(100, 10), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "green", "blue")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 50), c(1, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "green", "blue")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 30), c(1, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "green", "blue")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(1, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "green", "blue")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(1, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(h=100, v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "green", "blue")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(1, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(h=200, v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "green", "blue")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(1, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(h=500, v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "green", "blue")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(1, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(h=500, v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
conf_plot <- function(i){
interval <- conf_interval(control_sample[, i], 0.05)
covered <- mean(control_pop) <= interval[2] && mean(control_pop >= interval[1])
color <- ifelse(covered, "green", "blue")
lines(interval, c(i, i), col=color)
}
plot(mean(control_pop) + c(-5, 5), c(1, 1), type="n",
xlab="Weight", ylab="Interval", ylim=c(1, 100),
main="Control sample with 95% CI")
abline(v=mean(control_pop))
for(sample in 1:100)
conf_plot(sample)
